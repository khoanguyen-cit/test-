{"version":3,"sources":["components/editable-table.component.js","components/table-form-modal.component.js","components/reference-form.component.js","components/reference-table.component.js","components/furniture-color.component.js","components/furniture-material.component.js","helpers/history.js","helpers/cookie.js","helpers/token.js","components/private-route.component.js","components/login.component.js","services/http-common.js","components/addressable.component.js","components/home.component.js","components/error-404.component.js","services/authentication.service.js","containers/private-route.container.js","services/request-crud.service.js","services/data.services.js","actions/authentication.action.js","actions/room-type.action.js","actions/furniture-type.action.js","actions/furniture-color.action.js","actions/furniture-material.action.js","actions/furniture.action.js","actions/version.action.js","containers/authentication.container.js","containers/room-type.container.js","components/room-type.component.js","containers/furniture-type.container.js","components/furniture-type.component.js","containers/furniture-color.container.js","containers/furniture-material.container.js","containers/furniture.container.js","components/furniture.component.js","containers/version.container.js","components/version.component.js","components/main-layout.component.js","containers/main-layout.container.js","App.js","reducers/authentication.reducer.js","reducers/room-type.reducer.js","reducers/furniture-type.reducer.js","reducers/furniture-color.reducer.js","reducers/furniture-material.reducer.js","reducers/furniture.reducer.js","reducers/version.reducer.js","reducers/index.js","serviceWorker.js","index.js","app/store.js"],"names":["EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","Item","name","style","margin","rules","required","message","EditableTable","dataSource","columns","editById","getAll","getById","deleteById","Form","useForm","form","useState","editingKey","setEditingKey","isEditing","key","handleCancel","handleSave","a","validateFields","row","findIndex","item","payload","JSON","stringify","id","console","log","mergedColumns","newColumns","operationColumn","render","_","onClick","type","cancelText","okText","okType","onConfirm","icon","QuestionOutlined","color","disabled","setFieldsValue","handleEdit","EditOutlined","handleDelete","QuestionCircleOutlined","DeleteOutlined","push","expandColumns","map","col","editable","onCell","component","components","body","cell","bordered","pagination","onChange","TableFormModal","visible","onOk","onCancel","listInputs","label","onSubmit","data","resetFields","Option","Select","TextArea","Input","ReferenceForm","action","formRef","setFormRef","formTitle","setFormTitle","useEffect","toLowerCase","listItems","filter","field","selectable","placeholder","mode","options","option","value","text","width","autoSize","minRows","maxRows","allowClear","result","cancelButtonProps","display","renderItem","Meta","description","find","ref","layout","ReferenceCell","select","childNode","ReferenceTable","onHandleEdit","onHandleDetail","onHandleDelete","handleDetail","EyeOutlined","expandedColumns","fengshuiElements","history","createBrowserHistory","cookie","cName","cValue","expireTime","expires","toUTCString","document","escape","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","unescape","Date","decodedCookie","token","getToken","setToken","tokenValues","exDays","getExpiredTime","removeToken","updateToken","oldToken","newToken","Object","assign","tokenAccessIsValid","timeIsValid","expired_access_at","tokenRefreshIsValid","expired_refresh_at","parse","date","getTimezoneOffset","d","setTime","getTime","PrivateRoute","Component","rest","props","Token","to","pathname","state","from","location","Title","Typography","labelCol","span","wrapperCol","offset","tailLayout","LoginForm","login","logInError","error","initialValues","remember","onFinish","prefix","UserOutlined","className","Password","LockOutlined","valuePropName","htmlType","axios","create","baseURL","headers","Addressable","isFetching","setIsFetching","fileHash","setFileHash","fileJson","setFileJson","fileBundle","setFileBundle","onReset","spinning","textAlign","target","fields","formData","FormData","append","file_hash","file","file_json","file_bundle","http","post","access","then","response","success","catch","accept","beforeUpload","fileList","UploadOutlined","Card","routes","path","exact","RocketFilled","BuildFilled","ProfileOutlined","FormatPainterFilled","SkinFilled","GroupOutlined","NarCard","hoverable","float","fontSize","Home","Error404","status","subTitle","extra","authenticationDataService","connect","auth","authentication","get","Authoriztion","getOptions","interceptors","use","originalRequest","config","statusText","refresh","defaults","Authorization","Promise","reject","requestCRUDService","queryPath","update","put","partialUpdate","patch","delete","searchBy","params","str_filter","forEach","element","roomTypeDataService","furnitureTypeDataService","furnitureColorDataService","furnitureMaterialDataService","furnitureDataService","authenticationActionType","authenticationAction","dispatch","logout","fetchUserData","roomTypeActionType","roomTypeAction","getRoomType","roomTypeIsFetching","roomTypeListUpdate","roomTypeHasError","getRoomTypeById","roomTypeDetail","createRoomType","roomTypeCreated","editRoomTypeById","roomTypeEdited","deleteRoomTypeById","roomTypeDeleted","items","furnitureTypeActionType","furnitureTypeAction","fetchAllFurnitureType","furnitureTypeIsFetching","DataService","furnitureTypeFetchedAll","furnitureTypeHasError","createFurnitureType","editFurnitureType","deleteFurnitureType","furnitureColorActionType","furnitureColorAction","fetchAllFurnitureColor","furnitureColorIsFetching","furnitureColorFetchedAll","furnitureColorHasError","createFurnitureColor","editFurnitureColor","deleteFurnitureColor","furnitureMaterialActionType","furnitureMaterialAction","fetchAllFurnitureMaterial","furnitureMaterialIsFetching","furnitureMaterialFetchedAll","furnitureMaterialHasError","createFurnitureMaterial","editFurnitureMaterial","deleteFurnitureMaterial","furnitureActionType","furnitureAction","fetchAllFurniture","furnitureIsFetching","furnitureFetchedAll","furnitureHasError","createFurniture","editFurniture","deleteFurniture","versionActionType","versionAction","fetchAllVersion","versionIsFetching","versionFetchedAll","versionHasError","createVersion","connectedLogin","Action","loggingIn","justify","align","height","size","fontWeight","ConnectedRoomTypeList","roomTypes","setVisible","no","sorter","b","localeCompare","connectedFurnitureType","furnitureTypes","roomTypeOptions","useSelector","room","visibleForm","setVisibleForm","actionForm","setActionForm","filters","onFilter","connectedFurnitureColor","furnitureColors","code","connectedFurnitureMaterial","furnitureMaterials","connectedFurniture","furnitures","furnitureTypeOptions","furnitureColorOptions","furnitureMaterialOptions","furniturePublishOptions","hide","toLocaleString","unit","unitDisplay","depth","number","price","currency","furniture_type","includes","material","is_publish","connectedVersion","versions","Header","Layout","Footer","Sider","Content","privateRoutes","sidebar","DashboardOutlined","main","RocketOutlined","BuildOutlined","FormatPainterOutlined","SkinOutlined","Logout","placement","headerStyle","position","padding","backgroundColor","textJustify","footerStyle","connectedMainLayout","collapsed","setCollapsed","useLocation","menuItems","route","childrens","minHeight","collapsible","onCollapse","theme","selectedKeys","Divider","LogoutOutlined","loadAllData","App","useDispatch","Login","MainLayout","initState","hasError","add","list","newItem","newList","remove","itemRemove","replace","itemReplace","splice","rootReducer","combineReducers","ActionType","newItems","itemDetail","Boolean","window","hostname","match","store","preloadedState","createStore","middleware","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24f32f34.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, InputNumber, Input, Form, Space, Popconfirm, Button } from 'antd';\r\nimport { \r\n    QuestionCircleOutlined, \r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    QuestionOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (children)}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst EditableTable = ({\r\n    dataSource, \r\n    columns, \r\n    getAll,\r\n    getById,\r\n    editById,\r\n    deleteById,\r\n    ...restProps\r\n}) => {\r\n    const [form] = Form.useForm();\r\n    const [editingKey, setEditingKey] = useState('');\r\n\r\n    const isEditing = record => record.key === editingKey;\r\n\r\n    const handleEdit = record => {\r\n        form.setFieldsValue({...record});\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const handleSave = async key => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const index = dataSource.findIndex(item => item.key === key);\r\n            if(index > -1) {\r\n                let payload = JSON.stringify(row);\r\n                let id = dataSource[index].id;\r\n                editById(id, payload);\r\n                setEditingKey('');\r\n            } else {\r\n                //let payload = JSON.stringify(row);\r\n                //console.log(`Add ${payload}`);\r\n                setEditingKey('');\r\n            }\r\n        } catch(error) {\r\n            console.log(`Validate Failed: ${error}`);\r\n        }   \r\n    };\r\n\r\n    const handleDelete = record => {\r\n        deleteById(record.id);\r\n    }\r\n\r\n    const expandColumns = columns => {\r\n        const newColumns = [...columns];\r\n        const operationColumn = {\r\n            title: 'Operation',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <Space>\r\n                            <Button \r\n                                onClick={() => handleSave(record.key)}\r\n                                type=\"primary\"\r\n                            >Save</Button>\r\n                            <Popconfirm \r\n                                title={<span>Your editing will be not saved.<br/>Continue anyway?</span>}\r\n                                cancelText={'Keep editing'}\r\n                                okText={'Discard'} \r\n                                okType=\"danger\"\r\n                                onConfirm={handleCancel}\r\n                                icon={<QuestionOutlined style={{color: '#ff0000'}} />}\r\n                            >\r\n                                <Button>Cancel</Button>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    </span>\r\n                ) : (\r\n                    <span>\r\n                        <Space>\r\n                            <Button\r\n                                disabled={editingKey !== ''}\r\n                                onClick={() => handleEdit(record)}\r\n                                title={'Edit'}\r\n                            ><EditOutlined /></Button>\r\n                            <Popconfirm \r\n                                disabled={editingKey !== ''}\r\n                                title={<span>Critical! Are you sure to delete?</span>} \r\n                                okText={'Confirm'}\r\n                                okType=\"danger\"\r\n                                onConfirm={() => handleDelete(record)}\r\n                                icon={<QuestionCircleOutlined style={{color: '#ff0000'}} />}\r\n                            >\r\n                                <Button\r\n                                    disabled={editingKey !== ''}\r\n                                    title={'Delete'}\r\n                                ><DeleteOutlined style={{color: '#ff0000'}} /></Button>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    </span>\r\n                );\r\n            }\r\n        }\r\n        newColumns.push(operationColumn)\r\n        return newColumns;\r\n    }\r\n\r\n    const mergedColumns = expandColumns(columns).map(col => {\r\n        if(!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: record => ({\r\n                record,\r\n                inputType: col.type === 'number' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            })\r\n        }\r\n    });\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <Table \r\n                components={{\r\n                    body: {\r\n                        cell: EditableCell,\r\n                    },\r\n                }}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={mergedColumns}\r\n                pagination={{\r\n                    onChange: handleCancel,\r\n                }}\r\n                {...restProps}\r\n            />\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport { EditableTable };","import React from 'react';\r\nimport { InputNumber, Input, Form, Modal } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst TableFormModal = ({ columns, visible, onOk, onCancel, ...restProps}) => {\r\n    const [form] = Form.useForm();\r\n    const listInputs = columns.map((col, index) => {\r\n        return col.editable ? (\r\n            <Form.Item\r\n                key={index}\r\n                label={col.title}\r\n                name={col.dataIndex}\r\n                style={{}}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please Input ${col.title}`\r\n                    }\r\n                ]}\r\n            >\r\n                {col.type === 'number' ? <InputNumber /> : <Input/>}\r\n            </Form.Item>\r\n        ) : null\r\n    });\r\n\r\n    const onSubmit = async () => {\r\n        try {\r\n            const data = await form.validateFields();\r\n            form.resetFields();\r\n            onOk(data);\r\n        }\r\n        catch(error) {\r\n            //console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onOk={onSubmit}\r\n            onCancel={() => {\r\n                form.resetFields();\r\n                onCancel()\r\n            }}\r\n            {...restProps}\r\n        >\r\n            <Form form={form}>\r\n                {listInputs}\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport { TableFormModal };","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Form, \r\n    InputNumber, \r\n    Input, \r\n    Select, \r\n    Modal, \r\n    List, \r\n} from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst ReferenceForm = ({\r\n    columns,\r\n    onSubmit,\r\n    onCancel,\r\n    action, \r\n    /*\r\n        action = { \r\n            type: 'create' || 'update || 'display',\r\n            data: formValues\r\n        }\r\n\r\n    */\r\n    title,\r\n    ...restProps\r\n}) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [formRef, setFormRef] = useState();\r\n    const [formTitle, setFormTitle] = useState();\r\n    \r\n    useEffect(() => {\r\n        if(formRef) {\r\n            //let data = action.type === 'update' || action.type === 'display' ? action.data : {};\r\n            form.setFieldsValue(action.data);\r\n\r\n            return () => {\r\n                form.resetFields();\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        let titleForm = () => {\r\n            switch(action.type) {\r\n                case('create'):\r\n                    return `Add a new ${title.toLowerCase()}`;\r\n                case('update'):\r\n                    return `Edit a ${title.toLowerCase()}`;\r\n                case('display'):\r\n                    return `Detail a ${title.toLowerCase()}`;\r\n                default:\r\n                    return `Undefined title`;\r\n            }\r\n        };\r\n\r\n        setFormTitle(titleForm);\r\n    // eslint-disable-next-line\r\n    }, [action.type]);\r\n    \r\n    const fields = columns.filter(col => col.editable);\r\n    const listItems = fields.map((field, index) => {\r\n        let inputNode;\r\n        if(field.selectable) {\r\n            inputNode = \r\n                <Select\r\n                    placeholder={`Choose ${title.toLowerCase()} ${field.title.toLowerCase()}`}\r\n                    mode={field.mode}\r\n                >\r\n                    {field.options.map((option, index) => (\r\n                        <Option \r\n                            key={index}\r\n                            value={option.value}\r\n                        >\r\n                            {option.text}\r\n                        </Option>\r\n                    ))}\r\n                </Select>\r\n        } else {\r\n            inputNode = field.inputType === 'number' ? \r\n                <InputNumber \r\n                    style={{width: '100%'}} \r\n                    placeholder={`Enter ${title.toLowerCase()} ${field.title.toLowerCase()}`}\r\n                /> : \r\n                field.inputType === 'textArea' ? \r\n                <TextArea \r\n                    autoSize={{ minRows: 4, maxRows: 10 }} \r\n                    allowClear\r\n                    placeholder={`Enter ${title.toLowerCase()} ${field.title.toLowerCase()}`}\r\n                /> :\r\n                <Input placeholder={`Enter ${title.toLowerCase()} ${field.title.toLowerCase()}`} />\r\n        }\r\n\r\n        return (\r\n            <Form.Item\r\n                key={index}\r\n                label={field.title}\r\n                name={field.dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `Please input ${field.title.toLowerCase()}`,\r\n                    },\r\n                ]}\r\n            >\r\n                {inputNode}\r\n            </Form.Item>\r\n        );\r\n    });\r\n\r\n    const onOk = async () => {\r\n        try {\r\n            let data = await form.validateFields();\r\n            form.resetFields();\r\n            onSubmit({action: action, result: data});\r\n        } catch(error) {\r\n            //console.log(error);\r\n        }\r\n    };\r\n\r\n    return(\r\n        action.type === 'display' ?\r\n        (\r\n            <Modal \r\n                title={formTitle}\r\n                onOk={onCancel}\r\n                okText={'OK'}\r\n                onCancel={onCancel}\r\n                cancelButtonProps={{style: {display: 'none'}}}\r\n                {...restProps}\r\n            >\r\n                <List \r\n                    bordered\r\n                    dataSource={columns}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <List.Item.Meta \r\n                                title={<b>{item.title}</b>}\r\n                                description={\r\n                                    item.render ? item.render(action.data[item.dataIndex]) : \r\n                                    item.selectable ? \r\n                                    item.options.find(option => option.value === action.data[item.dataIndex]).text : \r\n                                    action.data[item.dataIndex]\r\n                                }\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Modal>\r\n        ) : \r\n        (\r\n            <Modal\r\n                title={formTitle}\r\n                onOk={onOk}\r\n                okText={'Submit'}\r\n                onCancel={onCancel}\r\n                {...restProps}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    ref={setFormRef}\r\n                    layout=\"vertical\"\r\n                >\r\n                    {listItems}\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    );\r\n};\r\n\r\nexport { ReferenceForm };","import React from 'react';\r\nimport { \r\n    Button, \r\n    Space, \r\n    Table, \r\n    Popconfirm\r\n} from 'antd';\r\nimport { \r\n    EditOutlined, \r\n    DeleteOutlined, \r\n    EyeOutlined, \r\n    QuestionCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst ReferenceCell = ({\r\n    children,\r\n    selectable,\r\n    mode,\r\n    select,\r\n    options,\r\n    ...restProps\r\n}) => {\r\n    let childNode = children;\r\n    if(selectable && !mode) {\r\n        let option = options.find(option => option.value === select.value);\r\n        childNode = option ? option.text : null;\r\n    }\r\n    return (\r\n        <td {...restProps}>\r\n            {childNode}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst ReferenceTable = ({\r\n    dataSource,\r\n    columns,\r\n    onHandleEdit,\r\n    onHandleDetail,\r\n    onHandleDelete,\r\n    ...restProps\r\n}) => {\r\n\r\n    const handleDetail = (record) => {\r\n        onHandleDetail(record);\r\n    };\r\n\r\n    const handleEdit = (record) => {\r\n        onHandleEdit(record);\r\n    };\r\n\r\n    const handleDelete = (record) => {\r\n        onHandleDelete(record);\r\n    };\r\n\r\n    const operationColumn = ({\r\n        title: 'Operation',\r\n        dataIndex: 'operation',\r\n        render: (_, record) => {\r\n            return(\r\n                <Space>\r\n                    <Button \r\n                        onClick={() => handleDetail(record)}\r\n                        title={'View'}\r\n                    >\r\n                        <EyeOutlined style={{color: '#40a9ff'}} />\r\n                    </Button>\r\n                    <Button \r\n                        title={'Edit'}\r\n                        onClick={() => handleEdit(record)}\r\n                    >\r\n                        <EditOutlined />\r\n                    </Button>\r\n                    <Popconfirm \r\n                        title={'Are you sure to delete?'}\r\n                        onConfirm={() => handleDelete(record)}\r\n                        okText={'Delete'}\r\n                        okType=\"danger\"\r\n                        icon={<QuestionCircleOutlined style={{color: '#ff0000'}} />}\r\n                    >\r\n                        <Button\r\n                            title={'Delete'}\r\n                        >\r\n                            <DeleteOutlined style={{color: '#ff0000'}} />\r\n                        </Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            );\r\n        }\r\n    });\r\n    \r\n    const expandedColumns = columns => {\r\n        let newColumns = [...columns];\r\n        newColumns.push(operationColumn);\r\n        return newColumns;\r\n    }\r\n\r\n    const mergedColumns = expandedColumns(columns).map((col) => {\r\n        if(!col.selectable) {\r\n            return col;\r\n        }\r\n        \r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                selectable: col.selectable,\r\n                select: { value: record[col.dataIndex] },\r\n                options: col.options,\r\n                mode: col.mode,\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    return(\r\n        <Table \r\n            components={{\r\n                body: {\r\n                    cell: ReferenceCell,\r\n                },\r\n            }}\r\n            dataSource={dataSource} \r\n            columns={mergedColumns}\r\n            {...restProps} \r\n        />\r\n    )\r\n};\r\n\r\nexport { ReferenceTable };","import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Spin, \r\n    PageHeader, \r\n    Button,\r\n    Tag,\r\n} from 'antd';\r\nimport { \r\n    ReferenceTable, \r\n    ReferenceForm, \r\n} from '../components';\r\n\r\nconst fengshuiElements = [\r\n    {\r\n        value: 1,\r\n        text: 'Kim'\r\n    },\r\n    {\r\n        value: 2,\r\n        text: 'Mộc'\r\n    },\r\n    {\r\n        value: 3,\r\n        text: 'Thủy'\r\n    },\r\n    {\r\n        value: 4,\r\n        text: 'Hỏa'\r\n    },\r\n    {\r\n        value: 5,\r\n        text: 'Thổ'\r\n    }\r\n];\r\n\r\nconst FurnitureColor = ({\r\n    items,\r\n    isFetching,\r\n    fetchAllFurnitureColor,\r\n    createFurnitureColor,\r\n    editFurnitureColor,\r\n    deleteFurnitureColor,\r\n}) => {\r\n\r\n    const dataSource = items.map((item, index) => {\r\n        return Object.assign({}, item, { key: item.id, no: index + 1});\r\n    });\r\n\r\n    const [visibleForm, setVisibleForm] = useState(false);\r\n    const [actionForm, setActionForm] = useState({action: '', data: {}});\r\n    const onSubmitForm = ({action, result}) => {\r\n        setVisibleForm(false);\r\n        if(action.type === 'create') {\r\n            createFurnitureColor(result)\r\n        } else if(action.type === 'update') {\r\n            editFurnitureColor(action.data.id, result);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            dataIndex: 'no',\r\n            width: '15%'\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            editable: true,\r\n            inputType: 'text',\r\n            width: '20%',\r\n            sorter: (a, b) => a.name.localeCompare(b.name)\r\n        },\r\n        {\r\n            title: 'Color value',\r\n            dataIndex: 'code',\r\n            editable: true,\r\n            inputType: 'text',\r\n            width: '20%',\r\n            render: code => (\r\n                <Tag \r\n                    color={code}\r\n                    style={{\r\n                        fontSize: '1em',\r\n                        width: '5em',\r\n                    }}\r\n                >\r\n                    {code}\r\n                </Tag>\r\n            )\r\n        },\r\n        {\r\n            title: 'Fengshui Element',\r\n            dataIndex: 'element',\r\n            editable: true,\r\n            selectable: true,\r\n            options: fengshuiElements,\r\n            width: '20%',\r\n            filters: fengshuiElements,\r\n            onFilter: (value, record) => record.element === value,\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchAllFurnitureColor();\r\n    // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Spin spinning={isFetching}>\r\n            \r\n            <ReferenceForm \r\n                title={'Furniture Color'}\r\n                visible={visibleForm}\r\n                columns={columns}\r\n                onSubmit={onSubmitForm}\r\n                onCancel={() => setVisibleForm(false)}\r\n                action={actionForm}\r\n            />\r\n            <PageHeader title={'Furniture Colors'}>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    setActionForm({type: 'create', data: {}})\r\n                    setVisibleForm(true);\r\n                }}\r\n                >New</Button>\r\n            </PageHeader>\r\n            <ReferenceTable \r\n                dataSource={dataSource} \r\n                columns={columns} \r\n                style={{\r\n                    margin: '0 24px'\r\n                }}\r\n                onHandleEdit={(record) => {\r\n                    setActionForm({type: 'update', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDetail={(record) => {\r\n                    setActionForm({type: 'display', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDelete={(record) => {\r\n                    deleteFurnitureColor(record.id);\r\n                }}\r\n            />\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport { FurnitureColor };","import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Spin, \r\n    PageHeader, \r\n    Button,\r\n} from 'antd';\r\nimport { \r\n    ReferenceTable, \r\n    ReferenceForm, \r\n} from '../components';\r\n\r\nconst fengshuiElements = [\r\n    {\r\n        value: 1,\r\n        text: 'Kim'\r\n    },\r\n    {\r\n        value: 2,\r\n        text: 'Mộc'\r\n    },\r\n    {\r\n        value: 3,\r\n        text: 'Thủy'\r\n    },\r\n    {\r\n        value: 4,\r\n        text: 'Hỏa'\r\n    },\r\n    {\r\n        value: 5,\r\n        text: 'Thổ'\r\n    }\r\n];\r\n\r\nconst FurnitureMaterial = ({\r\n    items,\r\n    isFetching,\r\n    fetchAllFurnitureMaterial,\r\n    createFurnitureMaterial,\r\n    editFurnitureMaterial,\r\n    deleteFurnitureMaterial,\r\n}) => {\r\n\r\n    const dataSource = items.map((item, index) => {\r\n        return Object.assign({}, item, { key: item.id, no: index + 1});\r\n    });\r\n\r\n    const [visibleForm, setVisibleForm] = useState(false);\r\n    const [actionForm, setActionForm] = useState({action: '', data: {}});\r\n    const onSubmitForm = ({action, result}) => {\r\n        setVisibleForm(false);\r\n        if(action.type === 'create') {\r\n            createFurnitureMaterial(result)\r\n        } else if(action.type === 'update') {\r\n            editFurnitureMaterial(action.data.id, result);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            dataIndex: 'no',\r\n            width: '15%'\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            editable: true,\r\n            inputType: 'text',\r\n            width: '30%',\r\n            sorter: (a, b) => a.name.localeCompare(b.name)\r\n        },\r\n        {\r\n            title: 'Fengshui Element',\r\n            dataIndex: 'element',\r\n            editable: true,\r\n            selectable: true,\r\n            options: fengshuiElements,\r\n            width: '30%',\r\n            filters: fengshuiElements,\r\n            onFilter: (value, record) => record.element === value,\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchAllFurnitureMaterial();\r\n    // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Spin spinning={isFetching}>\r\n            \r\n            <ReferenceForm \r\n                title={'Furniture Material'}\r\n                visible={visibleForm}\r\n                columns={columns}\r\n                onSubmit={onSubmitForm}\r\n                onCancel={() => setVisibleForm(false)}\r\n                action={actionForm}\r\n            />\r\n            <PageHeader title={'Furniture Materials'}>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    setActionForm({type: 'create', data: {}})\r\n                    setVisibleForm(true);\r\n                }}\r\n                >New</Button>\r\n            </PageHeader>\r\n            <ReferenceTable \r\n                dataSource={dataSource} \r\n                columns={columns} \r\n                style={{\r\n                    margin: '0 24px'\r\n                }}\r\n                onHandleEdit={(record) => {\r\n                    setActionForm({type: 'update', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDetail={(record) => {\r\n                    setActionForm({type: 'display', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDelete={(record) => {\r\n                    deleteFurnitureMaterial(record.id);\r\n                }}\r\n            />\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport { FurnitureMaterial };","import { createBrowserHistory } from 'history';\r\nexport const history = createBrowserHistory();","const cookie = {\r\n    setCookie: function(cName, cValue, expireTime = false) {\r\n        console.log(expireTime);\r\n        if(expireTime) {\r\n            let expires = \"expires=\"+ expireTime.toUTCString();\r\n            document.cookie = cName + \"=\" + escape(cValue) + \";\" + expires + \";path=/\";\r\n\r\n            document.cookie = cName + \"_expireTime=\"+ expireTime + \";\" + expires + \";path=/\";\r\n        }\r\n        else {\r\n            document.cookie = cName + \"=\" + escape(cValue) + \";path=/\";\r\n\r\n            document.cookie = cName + \"_expireTime=;expires=;path=/\";\r\n        }\r\n    },\r\n \r\n    getCookie: function(cName) {\r\n        let name = cName + \"=\";\r\n        let decodedCookie = decodeURIComponent(document.cookie);\r\n        let ca = decodedCookie.split(';');\r\n        for(let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return unescape(c.substring(name.length, c.length));\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    removeCookie: function(cName) {\r\n        let d = new Date();\r\n        let expires = \"expires=\"+ d.toUTCString();\r\n        document.cookie = cName + \"=;\" + expires + \";path=/\";\r\n    },\r\n\r\n    getExpireCookie: function(cName) {\r\n        let name = cName + \"_expireTime=\";\r\n        let decodedCookie = decodeURIComponent(document.cookie);\r\n        console.log(decodedCookie);\r\n        let ca = decodedCookie.split(';');\r\n        for(let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return new Date(unescape(c.substring(name.length, c.length)));\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n};\r\n\r\nexport { cookie };","import { cookie } from './cookie';\r\n\r\nconst tokenAlias = '_token';\r\nconst token = {\r\n    getToken,\r\n    setToken,\r\n    removeToken,\r\n    updateToken,\r\n    tokenAccessIsValid,\r\n    tokenRefreshIsValid,\r\n};\r\n\r\nexport { token };\r\n\r\nfunction getToken() {\r\n    return JSON.parse(cookie.getCookie(tokenAlias));\r\n}\r\n\r\nfunction setToken(tokenValues, exDays = 0) {\r\n    cookie.setCookie(tokenAlias, JSON.stringify(tokenValues), exDays > 0 ? getExpiredTime(exDays) : false);\r\n}\r\n\r\nfunction updateToken(tokenValues) {\r\n    let oldToken = getToken();\r\n    let newToken = tokenValues;\r\n    if(oldToken != null)\r\n        newToken = Object.assign({}, oldToken, tokenValues);\r\n    cookie.setCookie(tokenAlias, JSON.stringify(newToken), cookie.getExpireCookie(tokenAlias));\r\n}\r\n\r\nfunction removeToken() {\r\n    cookie.removeCookie(tokenAlias);\r\n}\r\n\r\nfunction tokenAccessIsValid() {\r\n    let token = getToken();\r\n    if(token) {\r\n        return timeIsValid(token.expired_access_at)\r\n    }\r\n}\r\n\r\nfunction tokenRefreshIsValid() {\r\n    let token = getToken();\r\n    if(token) {\r\n        return timeIsValid(token.expired_refresh_at)\r\n    }\r\n}\r\n\r\nfunction utc_to_local(utc) {\r\n    let d = new Date(utc - (new Date().getTimezoneOffset() * 60000));\r\n    return d;\r\n}\r\n\r\nfunction timeIsValid(date) {\r\n    let d = utc_to_local(date);\r\n    return d > new Date();\r\n}\r\n\r\nfunction getExpiredTime(exDays) {\r\n    let d = new Date();\r\n    d.setTime(d.getTime() + (exDays*24*60*60*1000));\r\n    return d;\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { token as Token } from '../helpers';\r\n\r\nexport const PrivateRoute = ({\r\n    component: Component,\r\n    ...rest }) => (\r\n   <Route {...rest} render={props => (\r\n       Token.tokenRefreshIsValid() ? <Component {...props} />\r\n       : <Redirect to={{ pathname: '/login/', state: { from: props.location } }} />\r\n   )} />\r\n)","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button, Checkbox, Typography, message, Spin, Row, Col  } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { token as Token } from '../helpers';\r\n\r\nconst { Title } = Typography;\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n    //\r\n    offset: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 8,\r\n  },\r\n};\r\n\r\nconst LoginForm = ({ login, logInError }) => {\r\n  useEffect(() => {\r\n    if(logInError){\r\n      message.error('Username or password isn\\'t correct!');\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={login}\r\n      //onFinishFailed={onError}\r\n    >\r\n      <Form.Item\r\n        //label=\"Email\"\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid email!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your email!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        //label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Login\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Login = ({ loggingIn, location,...rest}) => {\r\n  let isLoggedIn = Token.tokenRefreshIsValid();\r\n  return(\r\n    isLoggedIn ? <Redirect to={location.state ? location.state.from : '/'} /> :\r\n    <Row justify=\"space-around\" align=\"middle\" style={{ height: '100vh' }}>\r\n      <Col span={20}>\r\n        <Spin spinning={loggingIn} size=\"large\">\r\n          <Title style={{ color: '#333', fontWeight: 'normal', textAlign: 'center' }}>\r\n            Login Form\r\n          </Title>\r\n          <LoginForm {...rest}/>\r\n        </Spin>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport { Login };","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://test-khoa54.herokuapp.com/api/v1\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import React, { useState } from 'react';\r\nimport { Form, Spin, PageHeader, Select, Button, Upload, message, Space } from 'antd';\r\nimport http from '../services/http-common';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { token as Token } from '../helpers';\r\n\r\nconst { Option } = Select;\r\nconst layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\nconst Addressable = () => {\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n    const [fileHash, setFileHash] = useState([]);\r\n    const [fileJson, setFileJson] = useState([]);\r\n    const [fileBundle, setFileBundle] = useState([]);\r\n\r\n    const onFinish = (fields) => {\r\n        setIsFetching(true);\r\n        let formData = new FormData()\r\n        \r\n        formData.append('file_hash', fields.file_hash.file);\r\n        formData.append('file_json', fields.file_json.file);\r\n        formData.append('file_bundle', fields.file_bundle.file);\r\n        formData.append('target_build', fields.target);\r\n        \r\n        http.post('/upload-addressables/', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': 'Bearer ' + Token.getToken().access,\r\n            }\r\n        })\r\n        .then(response => {\r\n            setIsFetching(false);\r\n            form.resetFields();\r\n            message.success('Uploaded sucessfully!', 5);\r\n            onReset();\r\n        })\r\n        .catch(error => {\r\n            setIsFetching(false);\r\n            message.error('Unexpected error has occured!')\r\n            console.log(error);\r\n        })\r\n    };\r\n\r\n    const onReset = () => {\r\n        setFileHash(null);\r\n        setFileJson(null);\r\n        setFileBundle(null);\r\n        form.resetFields();\r\n    };\r\n    \r\n    return(\r\n        <Spin spinning={isFetching}>\r\n            <PageHeader title={'Unity Addressables'}></PageHeader>\r\n            <h1 style={{textAlign: 'center'}}>Upload addressables Unity</h1>\r\n            <Form\r\n                form={form}\r\n                initialValues={{target: 'Android'}}\r\n                onFinish={onFinish}\r\n                style={{\r\n                    margin: '24px'\r\n                }}\r\n                {...layout}\r\n            >\r\n                <Form.Item\r\n                    label=\"Target\"\r\n                    name=\"target\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please choose the target.'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Select>\r\n                        <Option value=\"Android\">Android</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"File hash\"\r\n                    name=\"file_hash\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please select file hash.'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Upload \r\n                        accept=\".hash\"\r\n                        beforeUpload={file => {\r\n                            setFileHash([file]);\r\n                            return false;\r\n                        }}\r\n                        fileList={fileHash}\r\n                    >\r\n                        <Button><UploadOutlined />File hash</Button>\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"File json\"\r\n                    name=\"file_json\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please select file json.'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Upload \r\n                        accept=\".json\"\r\n                        beforeUpload={file => {\r\n                            setFileJson([file]);\r\n                            return false;\r\n                        }}\r\n                        fileList={fileJson}\r\n                    >\r\n                        <Button><UploadOutlined />File json</Button>\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"File bundle\"\r\n                    name=\"file_bundle\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please select file bundle.'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Upload \r\n                        accept=\".bundle\"\r\n                        beforeUpload={file => {\r\n                            setFileBundle([file]);\r\n                            return false;\r\n                        }}\r\n                        fileList={fileBundle}\r\n                    >\r\n                        <Button><UploadOutlined />File bundle</Button>\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Space>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                        <Button \r\n                            type=\"default\" \r\n                            htmlType=\"reset\"\r\n                            onClick={onReset}\r\n                        >\r\n                        Reset\r\n                        </Button>\r\n                    </Space>\r\n                </Form.Item>\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport { Addressable }","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, PageHeader } from 'antd';\r\nimport { \r\n    UploadOutlined,\r\n    ProfileOutlined,\r\n    GroupOutlined,\r\n    RocketFilled,\r\n    BuildFilled,\r\n    FormatPainterFilled,\r\n    SkinFilled\r\n} from '@ant-design/icons';\r\nconst { Meta } = Card;\r\n\r\nconst routes = [\r\n    {\r\n        path: '/versions/',\r\n        exact: true,\r\n        name: 'Versions',\r\n        icon: <RocketFilled />,\r\n    },\r\n    {\r\n        path: '/addressables/',\r\n        exact: true,\r\n        name: 'Addressables',\r\n        icon: <UploadOutlined />,\r\n    },\r\n    {\r\n        path: '/furnitures/',\r\n        exact: true,\r\n        name: 'Furnitures',\r\n        icon: <BuildFilled />,\r\n    },\r\n    {\r\n      path: '/furniture-types/',\r\n      exact: true,\r\n      name: 'Furniture Types',\r\n      icon: <ProfileOutlined />,\r\n    },\r\n    {\r\n        path: '/furniture-colors/',\r\n        exact: true,\r\n        name: 'Furniture Colors',\r\n        icon: <FormatPainterFilled />,\r\n    },\r\n    {\r\n        path: '/furniture-materials/',\r\n        exact: true,\r\n        name: 'Furniture Materials',\r\n        icon: <SkinFilled />,\r\n    },\r\n    {\r\n        path: '/room-types/',\r\n        exact: true,\r\n        name: 'Room Types',\r\n        icon: <GroupOutlined />,\r\n    },\r\n];\r\nconst NarCard = ({\r\n    icon,\r\n    name,\r\n    path,\r\n    color,\r\n}) => {\r\n    return (\r\n        <Link to={path}>\r\n            <Card\r\n                hoverable\r\n                style={{\r\n                    width: '230px', \r\n                    float: 'left',\r\n                    textAlign: 'center',\r\n                    margin: '12px 0px 12px 24px',\r\n                    color: color\r\n                }}\r\n            >\r\n                <span style={{  fontSize: '100px' }}>{icon}</span>\r\n                <Meta title={name} />\r\n            </Card>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n        <PageHeader title={'Home'}></PageHeader>\r\n        <div>\r\n            {routes.map((item, index) => (\r\n                <NarCard key={index} {...item} />\r\n            ))}\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Button type=\"primary\"><Link to={'/'}>Back Home</Link></Button>}\r\n        />\r\n    )\r\n};","import http from './http-common';\r\nimport { token as Token } from '../helpers';\r\n\r\nconst authenticationDataService = {\r\n    create: (data) => http.post('/token/create/', data),\r\n    verify: (data) => http.post('/token/verify/', data),\r\n    refresh: (data) => http.post('/token/refresh/', data),\r\n    blacklist: (data) => http.post('/token/blacklist/', data),\r\n    getUserInfo: () => http.get('/accounts/me/', getOptions())\r\n}\r\n\r\nfunction getOptions() {\r\n    let options = {};\r\n    if(Token.tokenAccessIsValid()) {\r\n        let token = Token.getToken();\r\n        options.headers = { \r\n            Authoriztion: 'Bearer ' + token.access,\r\n            \"Content-type\": \"application/json\" \r\n        };\r\n    }\r\n    return options;\r\n}\r\n\r\nexport { authenticationDataService };","import { PrivateRoute } from '../components';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, {auth: state.authentication.auth} );\r\n}\r\nconst connectPrivateRoute = connect(mapStateToProps)(PrivateRoute);\r\n\r\nexport { connectPrivateRoute as PrivateRoute };","import http from './http-common';\r\nimport { token as Token } from '../helpers';\r\nimport { authenticationDataService } from './authentication.service';\r\n\r\nhttp.interceptors.response.use(\r\n    response => response, \r\n    error => {\r\n        const originalRequest = error.config;\r\n        if(error.response.status === 401 && error.response.statusText === 'Unauthorized'){\r\n            if(Token.tokenRefreshIsValid()) {\r\n                let token = Token.getToken();\r\n                return authenticationDataService.refresh({refresh: token.refresh})\r\n                    .then(response => {\r\n                        Token.updateToken(response.data);\r\n                        http.defaults.headers = { \r\n                            Authorization: 'Bearer ' + response.data.access,\r\n                            \"Content-type\": \"application/json\" \r\n                        };\r\n                        originalRequest.headers = { \r\n                            Authorization: 'Bearer ' + response.data.access,\r\n                            \"Content-type\": \"application/json\" \r\n                        };\r\n                        return http(originalRequest);\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                    });\r\n            }\r\n            else {\r\n                Token.removeToken();\r\n                Promise.reject(error);\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst requestCRUDService = (queryPath) => {\r\n    return {\r\n        getAll: () => { \r\n            return http.get(`${queryPath}/`); \r\n        },\r\n        get: (id) => { \r\n            return http.get(`${queryPath}/${id}/`); \r\n        },\r\n        create: (data) => { \r\n            return http.post(`${queryPath}/`, data, getOptions()); \r\n        },\r\n        update: (id, data) => { \r\n            return http.put(`${queryPath}/${id}/`, data, getOptions()); \r\n        },\r\n        partialUpdate: (id, data) => {\r\n            return http.patch(`${queryPath}/${id}/`, data, getOptions()); \r\n        },\r\n        delete: (id) => { \r\n            return http.delete(`${queryPath}/${id}/`, getOptions()); \r\n        },\r\n        searchBy: (params) => {\r\n            let str_filter = '?';\r\n            params.forEach(element => {\r\n                str_filter += `${element.field}=${element.value}`;\r\n            });\r\n            return http.get(`${queryPath}/${str_filter}`);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getOptions() {\r\n    let options = {};\r\n    if(Token.tokenRefreshIsValid()){\r\n        options.headers = { \r\n            Authorization: 'Bearer ' + Token.getToken().access,\r\n            \"Content-type\": \"application/json\" \r\n        };\r\n    }\r\n    return options;\r\n}\r\n\r\nexport default requestCRUDService;","import requestCRUDService from './request-crud.service';\r\n\r\n\r\n/* export */\r\n\r\nexport const roomTypeDataService = requestCRUDService('/room-types')\r\n\r\nexport const furnitureTypeDataService = requestCRUDService('/furniture-types')\r\n\r\nexport const furnitureColorDataService = requestCRUDService('/colors')\r\n\r\nexport const furnitureMaterialDataService = requestCRUDService('/materials')\r\n\r\nexport const furnitureDataService = requestCRUDService('/furnitures')\r\n","import { authenticationDataService } from '../services';\r\nimport { token as Token } from '../helpers';\r\n\r\nconst LOGGED_IN = 'LOGGED_IN';\r\nconst LOGGED_OUT = 'LOGGED_OUT';\r\nconst LOGGING_IN = 'LOGGING_IN';\r\nconst LOG_IN_ERROR = 'LOG_IN_ERROR';\r\nconst FETCHED_USER_DATA = 'FETCHED_USER_DATA';\r\n\r\nexport const authenticationActionType = {\r\n    LOGGED_IN,\r\n    LOGGED_OUT,\r\n    LOGGING_IN,\r\n    LOG_IN_ERROR,\r\n    FETCHED_USER_DATA,\r\n};\r\n\r\nexport const authenticationAction = {\r\n    login,\r\n    logout,\r\n    fetchUserData,\r\n};\r\n\r\nconst loggedIn = () => ({\r\n    type: LOGGED_IN,\r\n});\r\n\r\nconst loggedOut = () => ({\r\n    type: LOGGED_OUT,\r\n});\r\n\r\nconst loggingIn = () => ({\r\n    type: LOGGING_IN,\r\n});\r\n\r\nconst logInError = () => ({\r\n    type: LOG_IN_ERROR,\r\n});\r\n\r\nconst fetchedUserData = (auth) => ({\r\n    type: FETCHED_USER_DATA,\r\n    auth\r\n});\r\n\r\nfunction login(payload) {\r\n    return dispatch => {\r\n\r\n        let remember = payload.remember;\r\n        dispatch(loggingIn());\r\n        \r\n        authenticationDataService.create(payload)\r\n        .then(response => {\r\n            let token = response.data;\r\n\r\n            Token.setToken(token, remember ? 14 : 0);\r\n\r\n            dispatch(loggedIn());\r\n        })\r\n        .catch(error => {\r\n            console.error(error.config);\r\n            dispatch(logInError());\r\n        })\r\n    }\r\n};\r\n\r\nfunction logout() {\r\n    return dispatch => {\r\n        if(Token.tokenRefreshIsValid()) {\r\n            let token = Token.getToken();\r\n            authenticationDataService.blacklist({refresh: token.refresh})\r\n            .then(response => {\r\n                \r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n        }\r\n        Token.removeToken();\r\n        dispatch(loggedOut());\r\n    }\r\n}\r\n\r\nfunction fetchUserData() {\r\n    return dispatch => {\r\n        authenticationDataService.getUserInfo()\r\n        .then(response => {\r\n            dispatch(fetchedUserData(response.data));\r\n        })\r\n        .catch(error => {\r\n            console.error(error.config);\r\n        });\r\n    }\r\n};","import { roomTypeDataService } from '../services';\r\n// action types and action creator for roomType\r\nconst FETCHED_ALL_ROOM_TYPE = 'FETCHED_ALL_ROOM_TYPE'\r\nconst ROOM_TYPE_DETAIL = 'ROOM_TYPE_DETAIL'\r\n\r\nconst ROOM_TYPE_CREATED = 'ROOM_TYPE_CREATED'\r\nconst ROOM_TYPE_EDITED = 'ROOM_TYPE_EDITED'\r\nconst ROOM_TYPE_DELETED = 'ROOM_TYPE_DELETED'\r\nconst ROOM_TYPE_IS_FETCHING = 'ROOM_TYPE_IS_FETCHING'\r\nconst ROOM_TYPE_HAS_ERROR = 'ROOM_TYPE_HAS_ERROR'\r\n\r\nexport const roomTypeActionType = {\r\n    FETCHED_ALL_ROOM_TYPE,\r\n    ROOM_TYPE_DETAIL,\r\n    ROOM_TYPE_CREATED,\r\n    ROOM_TYPE_EDITED,\r\n    ROOM_TYPE_DELETED,\r\n    ROOM_TYPE_IS_FETCHING,\r\n    ROOM_TYPE_HAS_ERROR\r\n}\r\nexport const roomTypeAction = {\r\n    getRoomType,\r\n    getRoomTypeById,\r\n    createRoomType,\r\n    editRoomTypeById,\r\n    deleteRoomTypeById\r\n}\r\n\r\nfunction createRoomType(payload) {\r\n    return dispatch => {\r\n        dispatch(roomTypeIsFetching);\r\n        roomTypeDataService.create(payload)\r\n        .then((response) => {\r\n            dispatch(roomTypeCreated(response.data));\r\n        })\r\n        .catch((error) => {\r\n            dispatch(roomTypeHasError());\r\n            console.error(error);\r\n        })\r\n    }\r\n}\r\nfunction editRoomTypeById(id, payload) {\r\n    return dispatch => {\r\n        dispatch(roomTypeIsFetching);\r\n        roomTypeDataService.update(id, payload)\r\n        .then((response) => {\r\n            dispatch(roomTypeEdited(response.data));\r\n        })\r\n        .catch((error) => {\r\n            dispatch(roomTypeHasError());\r\n            console.error(error);\r\n        })\r\n    }\r\n}\r\nfunction deleteRoomTypeById(id) {\r\n    return dispatch => {\r\n        dispatch(roomTypeIsFetching);\r\n        roomTypeDataService.delete(id)\r\n        .then((response) => {\r\n            dispatch(roomTypeDeleted({id: id}));\r\n        })\r\n        .catch((error) => {\r\n            dispatch(roomTypeHasError(error));\r\n            console.error(error);\r\n        })\r\n    }\r\n};\r\nfunction getRoomType() {\r\n    return async dispatch => {\r\n        dispatch(roomTypeIsFetching);\r\n        try {\r\n            let {data} = await roomTypeDataService.getAll();\r\n            dispatch(roomTypeListUpdate(data));\r\n        } catch(error) {\r\n            dispatch(roomTypeHasError());\r\n            console.error(error);\r\n        }\r\n    }\r\n};\r\nfunction getRoomTypeById(id) {\r\n    return dispatch => {\r\n        dispatch(roomTypeIsFetching);\r\n        roomTypeDataService.get(id)\r\n        .then((response) => {\r\n            dispatch(roomTypeDetail(response.data));\r\n        })\r\n        .catch((error) => {\r\n            dispatch(roomTypeHasError());\r\n            console.error(error);\r\n        })\r\n    }\r\n};\r\n\r\n\r\nconst roomTypeCreated = (data) => ({\r\n    type: ROOM_TYPE_CREATED,\r\n    data\r\n});\r\nconst roomTypeEdited = (data) => ({\r\n    type: ROOM_TYPE_EDITED,\r\n    data\r\n});\r\nconst roomTypeDeleted = (data) => ({\r\n    type: ROOM_TYPE_DELETED,\r\n    data\r\n});\r\nconst roomTypeIsFetching = ({\r\n    type: ROOM_TYPE_IS_FETCHING\r\n});\r\nconst roomTypeListUpdate = (items) => ({\r\n    type: FETCHED_ALL_ROOM_TYPE,\r\n    items\r\n});\r\nconst roomTypeDetail = (item) => ({\r\n    type: ROOM_TYPE_DETAIL,\r\n    item\r\n});\r\n\r\nconst roomTypeHasError = (error) => ({\r\n    type: ROOM_TYPE_HAS_ERROR,\r\n    error\r\n});","import { furnitureTypeDataService as DataService } from '../services';\r\n\r\nconst FURNITURE_TYPE_FETCHED_ALL = 'FURNITURE_TYPE_FETCHED_ALL';\r\nconst FURNITURE_TYPE_IS_FETCHING = 'FURNITURE_TYPE_IS_FETCHING';\r\nconst FURNITURE_TYPE_CREATED = 'FURNITURE_TYPE_CREATED';\r\nconst FURNITURE_TYPE_EDITED = 'FURNITURE_TYPE_EDITED';\r\nconst FURNITURE_TYPE_DELETED = 'FURNITURE_TYPE_DELETED';\r\nconst FURNITURE_TYPE_HAS_ERROR = 'FURNITURE_TYPE_HAS_ERROR';\r\n\r\nexport const furnitureTypeActionType = {\r\n    FURNITURE_TYPE_FETCHED_ALL,\r\n    FURNITURE_TYPE_IS_FETCHING,\r\n    FURNITURE_TYPE_CREATED,\r\n    FURNITURE_TYPE_EDITED,\r\n    FURNITURE_TYPE_DELETED,\r\n    FURNITURE_TYPE_HAS_ERROR,\r\n};\r\n\r\nexport const furnitureTypeAction = {\r\n    fetchAllFurnitureType,\r\n    createFurnitureType,\r\n    editFurnitureType,\r\n    deleteFurnitureType,\r\n};\r\n\r\nconst furnitureTypeFetchedAll = (data) => ({\r\n    type: FURNITURE_TYPE_FETCHED_ALL,\r\n    data\r\n});\r\n\r\nconst furnitureTypeIsFetching = () => ({\r\n    type: FURNITURE_TYPE_IS_FETCHING\r\n});\r\n\r\nconst furnitureTypeCreated = (data) => ({\r\n    type: FURNITURE_TYPE_CREATED,\r\n    data\r\n});\r\n\r\nconst furnitureTypeEdited = (data) => ({\r\n    type: FURNITURE_TYPE_EDITED,\r\n    data\r\n});\r\n\r\nconst furnitureTypeDeleted = (data) => ({\r\n    type: FURNITURE_TYPE_DELETED,\r\n    data\r\n});\r\n\r\nconst furnitureTypeHasError = (error) => ({\r\n    type: FURNITURE_TYPE_HAS_ERROR,\r\n    error\r\n});\r\n\r\nfunction fetchAllFurnitureType() {\r\n    return async dispatch => {\r\n        dispatch(furnitureTypeIsFetching());\r\n        try {\r\n            let {data} = await DataService.getAll();\r\n            dispatch(furnitureTypeFetchedAll(data));\r\n        } catch(error) {\r\n            dispatch(furnitureTypeHasError());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createFurnitureType(payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureTypeIsFetching());\r\n        DataService.create(payload)\r\n        .then(response => {\r\n            dispatch(furnitureTypeCreated(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureTypeHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction editFurnitureType(id, payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureTypeIsFetching());\r\n        DataService.update(id, payload)\r\n        .then(response => {\r\n            dispatch(furnitureTypeEdited(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureTypeHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteFurnitureType(id) {\r\n    return dispatch => {\r\n        dispatch(furnitureTypeIsFetching());\r\n        DataService.delete(id)\r\n        .then(response => {\r\n            dispatch(furnitureTypeDeleted({id: id}));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureTypeHasError(error));\r\n            console.log(error);\r\n        })\r\n    }\r\n}","import { furnitureColorDataService as DataService } from '../services';\r\n\r\nconst FURNITURE_COLOR_FETCHED_ALL = 'FURNITURE_COLOR_FETCHED_ALL';\r\nconst FURNITURE_COLOR_IS_FETCHING = 'FURNITURE_COLOR_IS_FETCHING';\r\nconst FURNITURE_COLOR_HAS_ERROR = 'FURNITURE_COLOR_HAS_ERROR';\r\nconst FURNITURE_COLOR_CREATED = 'FURNITURE_COLOR_CREATED';\r\nconst FURNITURE_COLOR_EDITED = 'FURNITURE_COLOR_EDITED';\r\nconst FURNITURE_COLOR_DELETED = 'FURNITURE_COLOR_DELETED';\r\n\r\nexport const furnitureColorActionType = {\r\n    FURNITURE_COLOR_FETCHED_ALL,\r\n    FURNITURE_COLOR_IS_FETCHING,\r\n    FURNITURE_COLOR_HAS_ERROR,\r\n    FURNITURE_COLOR_CREATED,\r\n    FURNITURE_COLOR_EDITED,\r\n    FURNITURE_COLOR_DELETED,\r\n};\r\n\r\nexport const furnitureColorAction = {\r\n    fetchAllFurnitureColor,\r\n    createFurnitureColor,\r\n    editFurnitureColor,\r\n    deleteFurnitureColor,\r\n};\r\n\r\nconst furnitureColorFetchedAll = (data) => ({\r\n    type: FURNITURE_COLOR_FETCHED_ALL,\r\n    data\r\n});\r\n\r\nconst furnitureColorIsFetching = () => ({\r\n    type: FURNITURE_COLOR_IS_FETCHING\r\n});\r\n\r\nconst furnitureColorCreated = (data) => ({\r\n    type: FURNITURE_COLOR_CREATED,\r\n    data\r\n});\r\n\r\nconst furnitureColorEdited = (data) => ({\r\n    type: FURNITURE_COLOR_EDITED,\r\n    data\r\n});\r\n\r\nconst furnitureColorDeleted = (data) => ({\r\n    type: FURNITURE_COLOR_DELETED,\r\n    data\r\n});\r\n\r\nconst furnitureColorHasError = (error) => ({\r\n    type: FURNITURE_COLOR_HAS_ERROR,\r\n    error\r\n});\r\n\r\nfunction fetchAllFurnitureColor() {\r\n    return async dispatch => {\r\n        dispatch(furnitureColorIsFetching());\r\n        try {\r\n            let { data } = await DataService.getAll();\r\n            dispatch(furnitureColorFetchedAll(data));\r\n        } catch(error) {\r\n            dispatch(furnitureColorHasError());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createFurnitureColor(payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureColorIsFetching());\r\n        DataService.create(payload)\r\n        .then(response => {\r\n            dispatch(furnitureColorCreated(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureColorHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction editFurnitureColor(id, payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureColorIsFetching());\r\n        DataService.update(id, payload)\r\n        .then(response => {\r\n            dispatch(furnitureColorEdited(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureColorHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteFurnitureColor(id) {\r\n    return dispatch => {\r\n        dispatch(furnitureColorIsFetching());\r\n        DataService.delete(id)\r\n        .then(response => {\r\n            dispatch(furnitureColorDeleted({id: id}));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureColorHasError(error));\r\n            //console.log(error);\r\n        });\r\n    }\r\n}","import { furnitureMaterialDataService as DataService } from '../services';\r\n\r\nconst FURNITURE_MATERIAL_FETCHED_ALL = 'FURNITURE_MATERIAL_FETCHED_ALL';\r\nconst FURNITURE_MATERIAL_IS_FETCHING = 'FURNITURE_MATERIAL_IS_FETCHING';\r\nconst FURNITURE_MATERIAL_HAS_ERROR = 'FURNITURE_MATERIAL_HAS_ERROR';\r\nconst FURNITURE_MATERIAL_CREATED = 'FURNITURE_MATERIAL_CREATED';\r\nconst FURNITURE_MATERIAL_EDITED = 'FURNITURE_MATERIAL_EDITED';\r\nconst FURNITURE_MATERIAL_DELETED = 'FURNITURE_MATERIAL_DELETED';\r\n\r\nexport const furnitureMaterialActionType = {\r\n    FURNITURE_MATERIAL_FETCHED_ALL,\r\n    FURNITURE_MATERIAL_IS_FETCHING,\r\n    FURNITURE_MATERIAL_HAS_ERROR,\r\n    FURNITURE_MATERIAL_CREATED,\r\n    FURNITURE_MATERIAL_EDITED,\r\n    FURNITURE_MATERIAL_DELETED,\r\n};\r\n\r\nexport const furnitureMaterialAction = {\r\n    fetchAllFurnitureMaterial,\r\n    createFurnitureMaterial,\r\n    editFurnitureMaterial,\r\n    deleteFurnitureMaterial,\r\n};\r\n\r\nconst furnitureMaterialFetchedAll = (data) => ({\r\n    type: FURNITURE_MATERIAL_FETCHED_ALL,\r\n    data\r\n});\r\n\r\nconst furnitureMaterialIsFetching = () => ({\r\n    type: FURNITURE_MATERIAL_IS_FETCHING\r\n});\r\n\r\nconst furnitureMaterialCreated = (data) => ({\r\n    type: FURNITURE_MATERIAL_CREATED,\r\n    data\r\n});\r\n\r\nconst furnitureMaterialEdited = (data) => ({\r\n    type: FURNITURE_MATERIAL_EDITED,\r\n    data\r\n});\r\n\r\nconst furnitureMaterialDeleted = (data) => ({\r\n    type: FURNITURE_MATERIAL_DELETED,\r\n    data\r\n});\r\n\r\nconst furnitureMaterialHasError = (error) => ({\r\n    type: FURNITURE_MATERIAL_HAS_ERROR,\r\n    error\r\n});\r\n\r\nfunction fetchAllFurnitureMaterial() {\r\n    return async dispatch => {\r\n        dispatch(furnitureMaterialIsFetching());\r\n        try {\r\n            let { data } = await DataService.getAll();\r\n            dispatch(furnitureMaterialFetchedAll(data));\r\n        } catch(error) {\r\n            dispatch(furnitureMaterialHasError());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createFurnitureMaterial(payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureMaterialIsFetching());\r\n        DataService.create(payload)\r\n        .then(response => {\r\n            dispatch(furnitureMaterialCreated(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureMaterialHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction editFurnitureMaterial(id, payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureMaterialIsFetching());\r\n        DataService.update(id, payload)\r\n        .then(response => {\r\n            dispatch(furnitureMaterialEdited(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureMaterialHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteFurnitureMaterial(id) {\r\n    return dispatch => {\r\n        dispatch(furnitureMaterialIsFetching());\r\n        DataService.delete(id)\r\n        .then(response => {\r\n            dispatch(furnitureMaterialDeleted({id: id}));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureMaterialHasError(error));\r\n            //console.log(error);\r\n        });\r\n    }\r\n}","import { furnitureDataService as DataService } from '../services';\r\n\r\nconst FURNITURE_FETCHED_ALL = 'FURNITURE_FETCHED_ALL';\r\nconst FURNITURE_IS_FETCHING = 'FURNITURE_IS_FETCHING';\r\nconst FURNITURE_HAS_ERROR = 'FURNITURE_HAS_ERROR';\r\nconst FURNITURE_CREATED = 'FURNITURE_CREATED';\r\nconst FURNITURE_EDITED = 'FURNITURE_EDITED';\r\nconst FURNITURE_DELETED = 'FURNITURE_DELETED';\r\n\r\nexport const furnitureActionType = {\r\n    FURNITURE_FETCHED_ALL,\r\n    FURNITURE_IS_FETCHING,\r\n    FURNITURE_HAS_ERROR,\r\n    FURNITURE_CREATED,\r\n    FURNITURE_EDITED,\r\n    FURNITURE_DELETED,\r\n};\r\n\r\nexport const furnitureAction = {\r\n    fetchAllFurniture,\r\n    createFurniture,\r\n    editFurniture,\r\n    deleteFurniture,\r\n};\r\n\r\nconst furnitureFetchedAll = (data) => ({\r\n    type: FURNITURE_FETCHED_ALL,\r\n    data\r\n});\r\n\r\nconst furnitureIsFetching = () => ({\r\n    type: FURNITURE_IS_FETCHING\r\n});\r\n\r\nconst furnitureCreated = (data) => ({\r\n    type: FURNITURE_CREATED,\r\n    data\r\n});\r\n\r\nconst furnitureEdited = (data) => ({\r\n    type: FURNITURE_EDITED,\r\n    data\r\n});\r\n\r\nconst furnitureDeleted = (data) => ({\r\n    type: FURNITURE_DELETED,\r\n    data\r\n});\r\n\r\nconst furnitureHasError = () => ({\r\n    type: FURNITURE_HAS_ERROR\r\n});\r\n\r\nfunction fetchAllFurniture() {\r\n    return async dispatch => {\r\n        dispatch(furnitureIsFetching());\r\n        try {\r\n            let { data } = await DataService.getAll();\r\n            dispatch(furnitureFetchedAll(data));\r\n        } catch(error) {\r\n            dispatch(furnitureHasError());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createFurniture(payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureIsFetching());\r\n        DataService.create(payload)\r\n        .then(response => {\r\n            dispatch(furnitureCreated(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction editFurniture(id, payload) {\r\n    return dispatch => {\r\n        dispatch(furnitureIsFetching());\r\n        DataService.update(id, payload)\r\n        .then(response => {\r\n            dispatch(furnitureEdited(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteFurniture(id) {\r\n    return dispatch => {\r\n        dispatch(furnitureIsFetching());\r\n        DataService.delete(id)\r\n        .then(response => {\r\n            dispatch(furnitureDeleted({id: id}));\r\n        })\r\n        .catch(error => {\r\n            dispatch(furnitureHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}","import http from '../services/http-common';\r\nimport { token as Token} from '../helpers';\r\n\r\nconst VERSION_FETCHED_ALL = 'VERSION_FETCHED_ALL';\r\nconst VERSION_IS_FETCHING = 'VERSION_IS_FETCHING';\r\nconst VERSION_HAS_ERROR = 'VERSION_HAS_ERROR';\r\nconst VERSION_CREATED = 'VERSION_CREATED';\r\n\r\nexport const versionActionType = {\r\n    VERSION_FETCHED_ALL,\r\n    VERSION_IS_FETCHING,\r\n    VERSION_HAS_ERROR,\r\n    VERSION_CREATED,\r\n};\r\n\r\nexport const versionAction = {\r\n    fetchAllVersion,\r\n    createVersion,\r\n};\r\n\r\nconst versionFetchedAll = (data) => ({\r\n    type: VERSION_FETCHED_ALL,\r\n    data\r\n});\r\n\r\nconst versionIsFetching = () => ({\r\n    type: VERSION_IS_FETCHING\r\n});\r\n\r\nconst versionCreated = (data) => ({\r\n    type: VERSION_CREATED,\r\n    data\r\n});\r\n\r\nconst versionHasError = () => ({\r\n    type: VERSION_HAS_ERROR\r\n});\r\n\r\nfunction fetchAllVersion() {\r\n    return async dispatch => {\r\n        dispatch(versionIsFetching());\r\n        try {\r\n            let { data } = await http.get('/versions/');\r\n            dispatch(versionFetchedAll(data));\r\n        } catch(error) {\r\n            dispatch(versionHasError());\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createVersion(payload) {\r\n    return dispatch => {\r\n        let options = {\r\n            headers : { \r\n                \"Authorization\": \"Bearer \" + Token.getToken().access,\r\n                \"Content-type\": \"application/json\" \r\n            }\r\n        }\r\n        dispatch(versionIsFetching());\r\n        http.post('/versions/', payload, options)\r\n        .then(response => {\r\n            dispatch(versionCreated(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(versionHasError());\r\n            console.log(error);\r\n        });\r\n    }\r\n}","import { Login } from '../components';\r\nimport { connect } from 'react-redux';\r\nimport { authenticationAction as Action } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, state.authentication );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (payload) => dispatch(Action.login(payload)),\r\n    }\r\n};\r\n\r\nconst connectedLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\r\nexport { connectedLogin as Login };","import { connect } from 'react-redux';\r\nimport { roomTypeAction } from '../actions';\r\nimport { RoomType } from '../components';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, state.roomTypes);\r\n}\r\n\r\nconst mapDisPatchToProps = dispatch => {\r\n    return {\r\n        getRoomType: () => dispatch(roomTypeAction.getRoomType()),\r\n        getRoomTypeById: (id) => dispatch(roomTypeAction.getRoomTypeById(id)),\r\n        createRoomType: (payload) => dispatch(roomTypeAction.createRoomType(payload)),\r\n        editRoomTypeById: (id, payload) => dispatch(roomTypeAction.editRoomTypeById(id, payload)),\r\n        deleteRoomTypeById: (id) => dispatch(roomTypeAction.deleteRoomTypeById(id))\r\n    }\r\n}\r\n\r\nconst ConnectedRoomTypeList = connect(mapStateToProps, mapDisPatchToProps)(RoomType)\r\n\r\nexport { ConnectedRoomTypeList as RoomType };","import React, { useState, useEffect } from 'react';\r\nimport { PageHeader, Button, Spin, } from 'antd';\r\nimport { EditableTable, TableFormModal } from '../components';\r\n\r\nconst RoomType = ({ \r\n    isFetching,\r\n    items,  \r\n    getRoomType,\r\n    getRoomTypeById,\r\n    createRoomType,\r\n    editRoomTypeById,\r\n    deleteRoomTypeById\r\n}) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const onOk = (data) => {\r\n        setVisible(false);\r\n        createRoomType(data);\r\n    };\r\n    \r\n    const onCancel = () => {\r\n        setVisible(false);\r\n    }\r\n\r\n    const onOpen = () => {\r\n        setVisible(true);\r\n    }\r\n\r\n    const dataSource = items.map((item, index) => {\r\n        return Object.assign({}, item, { key: item.id, no: index + 1})\r\n    });\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: '25%',\r\n            render: (no) => (\r\n                <span>{no}</span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            editable: true,\r\n            width: '50%',\r\n            sorter: (a, b) => a.name.localeCompare(b.name)\r\n        },\r\n    ];\r\n\r\n    \r\n    useEffect(() => {\r\n        getRoomType();\r\n    // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Spin spinning={isFetching}>\r\n            <TableFormModal \r\n                title={'Add a new room types'}\r\n                columns={columns} \r\n                visible={visible} \r\n                onOk={onOk}\r\n                onCancel={onCancel}\r\n                okText={'Submit'}\r\n            />\r\n            <PageHeader title={'Room Types'}>\r\n                <Button onClick={onOpen} type=\"primary\">New</Button>\r\n            </PageHeader>\r\n            <EditableTable \r\n                getAll={getRoomType}\r\n                getById={getRoomTypeById}\r\n                editById={editRoomTypeById}\r\n                deleteById={deleteRoomTypeById}\r\n\r\n                dataSource={dataSource} \r\n                columns={columns} \r\n                style={{margin: '0 24px'}} \r\n            />\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport { RoomType };","import { connect } from 'react-redux';\r\nimport { FurnitureType } from '../components';\r\nimport { furnitureTypeAction as Action } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, state.furnitureTypes);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllFurnitureType: () => dispatch(Action.fetchAllFurnitureType()),\r\n        createFurnitureType: (payload) => dispatch(Action.createFurnitureType(payload)),\r\n        editFurnitureType: (id, payload) => dispatch(Action.editFurnitureType(id, payload)),\r\n        deleteFurnitureType: (id) => dispatch(Action.deleteFurnitureType(id)),\r\n    }\r\n};\r\n\r\nconst connectedFurnitureType = connect(mapStateToProps, mapDispatchToProps)(FurnitureType);\r\nexport { connectedFurnitureType as FurnitureType };","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { \r\n    Spin, \r\n    PageHeader, \r\n    Button,\r\n} from 'antd';\r\nimport { \r\n    ReferenceTable, \r\n    ReferenceForm, \r\n} from '../components';\r\n\r\nconst FurnitureType = ({\r\n    items,\r\n    isFetching,\r\n    fetchAllFurnitureType,\r\n    createFurnitureType,\r\n    editFurnitureType,\r\n    deleteFurnitureType,\r\n}) => {\r\n\r\n    const roomTypes = useSelector(state => state.roomTypes.items);\r\n\r\n    const roomTypeOptions = roomTypes.map(room => {\r\n        return Object.assign({}, {value: room.id, text: room.name});\r\n    });\r\n\r\n    const dataSource = items.map((item, index) => {\r\n        return Object.assign({}, item, { key: item.id, no: index + 1});\r\n    });\r\n\r\n    const [visibleForm, setVisibleForm] = useState(false);\r\n    const [actionForm, setActionForm] = useState({action: '', data: {}});\r\n    const onSubmitForm = ({action, result}) => {\r\n        setVisibleForm(false);\r\n        if(action.type === 'create') {\r\n            createFurnitureType(result)\r\n        } else if(action.type === 'update') {\r\n            editFurnitureType(action.data.id, result);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            dataIndex: 'no',\r\n            width: '15%'\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            editable: true,\r\n            inputType: 'text',\r\n            width: '30%',\r\n            sorter: (a, b) => a.name.localeCompare(b.name)\r\n        },\r\n        {\r\n            title: 'Room Type',\r\n            dataIndex: 'room',\r\n            editable: true,\r\n            selectable: true,\r\n            options: roomTypeOptions,\r\n            width: '30%',\r\n            filters: roomTypeOptions,\r\n            onFilter: (value, record) => record.room === value,\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchAllFurnitureType();\r\n    // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Spin spinning={isFetching}>\r\n            \r\n            <ReferenceForm \r\n                title={'Furniture Type'}\r\n                visible={visibleForm}\r\n                columns={columns}\r\n                onSubmit={onSubmitForm}\r\n                onCancel={() => setVisibleForm(false)}\r\n                action={actionForm}\r\n            />\r\n            <PageHeader title={'Furniture Types'}>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    setActionForm({type: 'create', data: {}})\r\n                    setVisibleForm(true);\r\n                }}\r\n                >New</Button>\r\n            </PageHeader>\r\n            <ReferenceTable \r\n                dataSource={dataSource} \r\n                columns={columns} \r\n                style={{\r\n                    margin: '0 24px'\r\n                }}\r\n                onHandleEdit={(record) => {\r\n                    setActionForm({type: 'update', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDetail={(record) => {\r\n                    setActionForm({type: 'display', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDelete={(record) => {\r\n                    deleteFurnitureType(record.id);\r\n                }}\r\n            />\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport { FurnitureType };","import { connect } from 'react-redux';\r\nimport { FurnitureColor } from '../components/furniture-color.component';\r\nimport { furnitureColorAction as Action } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, state.furnitureColors);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllFurnitureColor: () => dispatch(Action.fetchAllFurnitureColor()),\r\n        createFurnitureColor: (payload) => dispatch(Action.createFurnitureColor(payload)),\r\n        editFurnitureColor: (id, payload) => dispatch(Action.editFurnitureColor(id, payload)),\r\n        deleteFurnitureColor: (id) => dispatch(Action.deleteFurnitureColor(id)),\r\n    }\r\n};\r\n\r\nconst connectedFurnitureColor = connect(mapStateToProps, mapDispatchToProps)(FurnitureColor);\r\nexport { connectedFurnitureColor as FurnitureColor };","import { connect } from 'react-redux';\r\nimport { FurnitureMaterial } from '../components/furniture-material.component';\r\nimport { furnitureMaterialAction as Action } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, state.furnitureMaterials);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllFurnitureMaterial: () => dispatch(Action.fetchAllFurnitureMaterial()),\r\n        createFurnitureMaterial: (payload) => dispatch(Action.createFurnitureMaterial(payload)),\r\n        editFurnitureMaterial: (id, payload) => dispatch(Action.editFurnitureMaterial(id, payload)),\r\n        deleteFurnitureMaterial: (id) => dispatch(Action.deleteFurnitureMaterial(id)),\r\n    }\r\n};\r\n\r\nconst connectedFurnitureMaterial = connect(mapStateToProps, mapDispatchToProps)(FurnitureMaterial);\r\nexport { connectedFurnitureMaterial as FurnitureMaterial };","import { connect } from 'react-redux';\r\nimport { Furniture } from '../components/furniture.component';\r\nimport { furnitureAction as Action } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, state.furnitures);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllFurniture: () => dispatch(Action.fetchAllFurniture()),\r\n        createFurniture: (payload) => dispatch(Action.createFurniture(payload)),\r\n        editFurniture: (id, payload) => dispatch(Action.editFurniture(id, payload)),\r\n        deleteFurniture: (id) => dispatch(Action.deleteFurniture(id)),\r\n    }\r\n};\r\n\r\nconst connectedFurniture = connect(mapStateToProps, mapDispatchToProps)(Furniture);\r\nexport { connectedFurniture as Furniture };","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { \r\n    Spin, \r\n    PageHeader, \r\n    Button,\r\n    Tag,\r\n} from 'antd';\r\nimport { \r\n    ReferenceTable, \r\n    ReferenceForm, \r\n} from '../components';\r\n\r\nconst Furniture = ({\r\n    items,\r\n    isFetching,\r\n    fetchAllFurniture,\r\n    createFurniture,\r\n    editFurniture,\r\n    deleteFurniture,\r\n}) => {\r\n\r\n    const furnitureTypeOptions = useSelector(\r\n        state => state.furnitureTypes.items).map(item => (\r\n            {value: item.id, text: item.name}\r\n    ));\r\n    \r\n    const furnitureColorOptions = useSelector(\r\n        state => state.furnitureColors.items).map(item => (\r\n            {value: item.id, text: item.name, code: item.code}\r\n    ));\r\n\r\n    const furnitureMaterialOptions = useSelector(\r\n        state => state.furnitureMaterials.items).map(item => (\r\n            {value: item.id, text: item.name}\r\n    ));\r\n\r\n    const furniturePublishOptions = [\r\n        {value: true, text: 'Published'},\r\n        {value: false, text: 'Pending'},\r\n    ];\r\n\r\n    const dataSource = items.map((item, index) => {\r\n        return Object.assign({}, item, { key: item.id, no: index + 1});\r\n    });\r\n\r\n    const [visibleForm, setVisibleForm] = useState(false);\r\n    const [actionForm, setActionForm] = useState({action: '', data: {}});\r\n    const onSubmitForm = ({action, result}) => {\r\n        setVisibleForm(false);\r\n        if(action.type === 'create') {\r\n            createFurniture(result)\r\n        } else if(action.type === 'update') {\r\n            editFurniture(action.data.id, result);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            dataIndex: 'no',\r\n            width: '5%'\r\n        },\r\n        {\r\n            title: 'Address in Unity',\r\n            dataIndex: 'id',\r\n            render: id => (\r\n                <span>{`fur_${id}`}</span>\r\n            ),\r\n            hide: true\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            editable: true,\r\n            inputType: 'text',\r\n            width: '25%',\r\n            sorter: (a, b) => a.name.localeCompare(b.name)\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            editable: true,\r\n            inputType: 'textArea',\r\n            hide: true\r\n        },\r\n        {\r\n            title: 'Width',\r\n            dataIndex: 'width',\r\n            editable: true,\r\n            inputType: 'number',\r\n            hide: true,\r\n            render: width => (\r\n                <span>\r\n                    {\r\n                        width.toLocaleString('it-IT', \r\n                        {style : 'unit', unit : 'centimeter', unitDisplay: 'short'})\r\n                    }\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Height',\r\n            dataIndex: 'height',\r\n            editable: true,\r\n            inputType: 'number',\r\n            hide: true,\r\n            render: height => (\r\n                <span>\r\n                    {\r\n                        height.toLocaleString('it-IT', \r\n                        {style : 'unit', unit : 'centimeter', unitDisplay: 'short'})\r\n                    }\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Depth',\r\n            dataIndex: 'depth',\r\n            editable: true,\r\n            inputType: 'number',\r\n            hide: true,\r\n            render: depth => (\r\n                <span>\r\n                    {\r\n                        depth.toLocaleString('it-IT', \r\n                        {style : 'unit', unit : 'centimeter', unitDisplay: 'short'})\r\n                    }\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            editable: true,\r\n            inputType: 'number',\r\n            width: '15%',\r\n            sorter: (a, b) => a.number - b.number,\r\n            render: price => (\r\n                <span>{price.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'furniture_type',\r\n            editable: true,\r\n            selectable: true,\r\n            options: furnitureTypeOptions,\r\n            width: '20%',\r\n            filters: furnitureTypeOptions,\r\n            onFilter: (value, record) => record.furniture_type === value,\r\n        },\r\n        {\r\n            title: 'Colors',\r\n            dataIndex: 'color',\r\n            editable: true,\r\n            selectable: true,\r\n            mode: 'multiple',\r\n            options: furnitureColorOptions,\r\n            hide: true,\r\n            render: color => (\r\n                furnitureColorOptions.filter(option => \r\n                    color.includes(option.value)).map((option, index) => \r\n                        <Tag \r\n                            key={index} \r\n                            color={option.code}\r\n                            style={{fontSize: '1em'}}\r\n                        >\r\n                            {option.text}\r\n                        </Tag>\r\n                )\r\n            )\r\n        },\r\n        {\r\n            title: 'Materials',\r\n            dataIndex: 'material',\r\n            editable: true,\r\n            selectable: true,\r\n            mode: 'multiple',\r\n            options: furnitureMaterialOptions,\r\n            hide: true,\r\n            render: material => (\r\n                furnitureMaterialOptions.filter(option => \r\n                    material.includes(option.value)).map((option, index) => \r\n                        <Tag key={index} style={{fontSize: '1em'}} >{option.text}</Tag>\r\n                )\r\n            )\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'is_publish',\r\n            editable: true,\r\n            selectable: true,\r\n            options: furniturePublishOptions,\r\n            width: '15%',\r\n            filters: furniturePublishOptions,\r\n            onFilter: (value, record) => record.is_publish === value,\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchAllFurniture();\r\n    // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Spin spinning={isFetching}>\r\n            \r\n            <ReferenceForm \r\n                title={'Furniture'}\r\n                visible={visibleForm}\r\n                columns={columns}\r\n                onSubmit={onSubmitForm}\r\n                onCancel={() => setVisibleForm(false)}\r\n                action={actionForm}\r\n            />\r\n            <PageHeader title={'Furnitures'}>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    setActionForm({type: 'create', data: {is_publish: false}})\r\n                    setVisibleForm(true);\r\n                }}\r\n                >New</Button>\r\n            </PageHeader>\r\n            <ReferenceTable \r\n                dataSource={dataSource} \r\n                columns={columns.filter(col => !col.hide)} \r\n                style={{\r\n                    margin: '0 24px'\r\n                }}\r\n                onHandleEdit={(record) => {\r\n                    setActionForm({type: 'update', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDetail={(record) => {\r\n                    setActionForm({type: 'display', data: record})\r\n                    setVisibleForm(true);\r\n                }}\r\n                onHandleDelete={(record) => {\r\n                    deleteFurniture(record.id);\r\n                }}\r\n            />\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport { Furniture };","import { connect } from 'react-redux';\r\nimport { Version } from '../components/version.component';\r\nimport { versionAction as Action } from '../actions/version.action';\r\n\r\nconst mapStateToProps = state => {\r\n    return Object.assign({}, state.versions);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllVersion: () => dispatch(Action.fetchAllVersion()),\r\n        createVersion: (payload) => dispatch(Action.createVersion(payload)),\r\n    }\r\n};\r\n\r\nconst connectedVersion = connect(mapStateToProps, mapDispatchToProps)(Version);\r\nexport { connectedVersion as Version };","import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Spin, \r\n    PageHeader, \r\n    Button,\r\n    Table, \r\n} from 'antd';\r\nimport {\r\n    ReferenceForm, \r\n} from '../components';\r\n\r\nconst Version = ({\r\n    items,\r\n    isFetching,\r\n    fetchAllVersion,\r\n    createVersion,\r\n}) => {\r\n\r\n    const dataSource = items.map((item, index) => {\r\n        return Object.assign({}, item, { key: item.id, no: index + 1});\r\n    });\r\n\r\n    const [visibleForm, setVisibleForm] = useState(false);\r\n    const [actionForm, setActionForm] = useState({action: '', data: {}});\r\n    const onSubmitForm = ({action, result}) => {\r\n        setVisibleForm(false);\r\n        if(action.type === 'create') {\r\n            createVersion(result);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No',\r\n            dataIndex: 'no',\r\n            width: '15%'\r\n        },\r\n        {\r\n            title: 'Number',\r\n            dataIndex: 'name',\r\n            editable: true,\r\n            inputType: 'text',\r\n            width: '20%',\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            width: '30%',\r\n            sorter: (a, b) => new Date(a.date) - new Date(b.date),\r\n            render: date => (\r\n                <span>{new Date(date).toLocaleString()}</span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Message',\r\n            dataIndex: 'message',\r\n            editable: true,\r\n            inputType: 'textArea',\r\n            width: '35%',\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchAllVersion();\r\n    // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Spin spinning={isFetching}>\r\n            \r\n            <ReferenceForm \r\n                title={'Version'}\r\n                visible={visibleForm}\r\n                columns={columns}\r\n                onSubmit={onSubmitForm}\r\n                onCancel={() => setVisibleForm(false)}\r\n                action={actionForm}\r\n            />\r\n            <PageHeader title={'Versions'}>\r\n                <Button type=\"primary\" onClick={() => {\r\n                    setActionForm({type: 'create', data: {}})\r\n                    setVisibleForm(true);\r\n                }}\r\n                >Publish a new version</Button>\r\n            </PageHeader>\r\n            <Table \r\n                dataSource={dataSource} \r\n                columns={columns} \r\n                style={{\r\n                    margin: '0 24px'\r\n                }}\r\n            />\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport { Version };","import React, { useState } from 'react';\r\nimport { Layout, Menu, Popconfirm, Divider } from 'antd';\r\nimport {\r\n    QuestionCircleOutlined,\r\n    //TranslationOutlined,\r\n    LogoutOutlined,\r\n    UploadOutlined,\r\n    FormatPainterOutlined,\r\n    SkinOutlined,\r\n    GroupOutlined,\r\n    DashboardOutlined,\r\n    ProfileOutlined,\r\n    RocketOutlined,\r\n    BuildOutlined\r\n} from '@ant-design/icons';\r\nimport { Link, Switch, useLocation } from 'react-router-dom';\r\nimport { \r\n    RoomType, \r\n    FurnitureType,\r\n    FurnitureColor,\r\n    FurnitureMaterial,\r\n    Furniture,\r\n    Version,\r\n} from '../containers';\r\nimport { PrivateRoute } from './private-route.component';\r\nimport { Addressable } from './addressable.component';\r\nimport { Home } from './home.component';\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst privateRoutes = [\r\n    {\r\n      path: '/',\r\n      exact: true,\r\n      name: 'Home',\r\n      sidebar: 'Home',\r\n      icon: <DashboardOutlined />,\r\n      main: () => <Home />\r\n    },\r\n    {\r\n        path: '/versions/',\r\n        exact: true,\r\n        name: 'Versions',\r\n        sidebar: 'Versions',\r\n        icon: <RocketOutlined />,\r\n        main: () => <Version />\r\n    },\r\n    {\r\n        path: '/addressables/',\r\n        exact: true,\r\n        name: 'Addressables',\r\n        sidebar: 'Addressables',\r\n        icon: <UploadOutlined />,\r\n        main: () => <Addressable />\r\n    },\r\n    {\r\n        path: '/furnitures/',\r\n        exact: true,\r\n        name: 'Furnitures',\r\n        sidebar: 'Furnitures',\r\n        icon: <BuildOutlined />,\r\n        main: () => <Furniture />\r\n    },\r\n    {\r\n      path: '/furniture-types/',\r\n      exact: true,\r\n      name: 'Furniture Types',\r\n      sidebar: 'Furniture Types',\r\n      icon: <ProfileOutlined />,\r\n      main: () => <FurnitureType />\r\n    },\r\n    {\r\n        path: '/furniture-colors/',\r\n        exact: true,\r\n        name: 'Furniture Colors',\r\n        sidebar: 'Furniture Colors',\r\n        icon: <FormatPainterOutlined />,\r\n        main: () => <FurnitureColor />\r\n    },\r\n    {\r\n        path: '/furniture-materials/',\r\n        exact: true,\r\n        name: 'Furniture Materials',\r\n        sidebar: 'Furniture Materials',\r\n        icon: <SkinOutlined />,\r\n        main: () => <FurnitureMaterial />\r\n    },\r\n    {\r\n        path: '/room-types/',\r\n        exact: true,\r\n        name: 'Room Types',\r\n        sidebar: 'Room Types',\r\n        icon: <GroupOutlined />,\r\n        main: () => <RoomType />\r\n    },\r\n];\r\n\r\nconst Logout = ({logout, children}) => (\r\n    <Popconfirm\r\n        placement=\"bottomRight\"\r\n        onConfirm={() => {logout()}}\r\n        title=\"Are you sure to logout?\"\r\n        okText=\"Yes\"\r\n        cancelText=\"No\"\r\n        icon={<QuestionCircleOutlined style={{color: '#ff0000'}} />}\r\n    >{children}</Popconfirm>\r\n)\r\n\r\nconst MainLayout = ({logout}) => {\r\n    \r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const onCollapse = (collapsed) => {\r\n        setCollapsed(collapsed);\r\n    };\r\n\r\n    let location = useLocation();\r\n    const menuItems = privateRoutes.map((route) => {\r\n        return (\r\n            <Menu.Item key={route.path}\r\n                style={{margin: 0}}\r\n            >\r\n                <Link to={route.path}>\r\n                {route.icon}\r\n                <span>{route.sidebar}</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        )\r\n    });\r\n\r\n    const childrens = privateRoutes.map((route, index) => (\r\n        <PrivateRoute \r\n            key={index} \r\n            exact={route.exact} \r\n            path={route.path} \r\n            component={route.main} \r\n        />\r\n    ));\r\n\r\n    return (\r\n        <Layout style={{minHeight: '100vh'}}>\r\n            <Sider \r\n                style={{\r\n                    minHeight: '100vh'\r\n                }} \r\n                collapsible collapsed={collapsed} \r\n                onCollapse={onCollapse} \r\n                theme=\"dark\"\r\n            >\r\n                <Divider />\r\n                <Menu theme='dark' selectedKeys={[location.pathname]} mode=\"inline\">\r\n                    {menuItems}\r\n                </Menu>\r\n                <Menu theme=\"dark\" selectable={false} mode=\"inline\">\r\n                    <Menu.Divider />\r\n                    <Menu.Item key={'logout'} style={{margin: 0}}>\r\n                        <Logout logout={logout}>\r\n                            <LogoutOutlined />\r\n                            <span>Logout</span>\r\n                        </Logout>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={headerStyle}>\r\n                    AR-Funitures Management App\r\n                </Header>\r\n                <Content>\r\n                    <Switch>\r\n                        {childrens}\r\n                    </Switch>\r\n                </Content>\r\n                <Footer style={footerStyle}>\r\n                    <div>Power by Ant-Design</div>\r\n                </Footer>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst headerStyle = {\r\n    position: 'relative',\r\n    padding: '4px',\r\n    margin: 0,\r\n    backgroundColor: '#24b7d3',\r\n    color: '#ffffff',\r\n    fontSize: '32px',\r\n    textAlign: 'center',\r\n    textJustify: 'middle',\r\n    height: '80px'\r\n}\r\n\r\nconst footerStyle = {\r\n    textAlign: 'center', \r\n    backgroundColor: '#24b7d3',\r\n    color: '#ffffff'\r\n}\r\n\r\nexport { MainLayout };","import { MainLayout } from '../components/main-layout.component';\r\nimport { connect } from 'react-redux';\r\nimport { authenticationAction as Action} from '../actions';\r\nimport { history } from '../helpers';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(Action.logout());\r\n            history.push('/login/');\r\n        },\r\n    }\r\n};\r\n\r\nconst connectedMainLayout = connect(null, mapDispatchToProps)(MainLayout);\r\nexport { connectedMainLayout as MainLayout };","import React from 'react';\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\nimport { PrivateRoute } from './components';\r\nimport { Error404 } from './components/error-404.component';\r\nimport { MainLayout } from './containers/main-layout.container';\r\nimport { history } from './helpers';\r\nimport { Login } from './containers';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  roomTypeAction,\r\n  furnitureTypeAction,\r\n  furnitureColorAction,\r\n  furnitureMaterialAction,\r\n  furnitureAction,\r\n  versionAction\r\n} from './actions/';\r\nimport 'antd/dist/antd.css';\r\nimport './css/App.css';\r\n\r\nconst loadAllData = async (dispatch) => {\r\n  dispatch(versionAction.fetchAllVersion());\r\n  await dispatch(roomTypeAction.getRoomType());\r\n  await dispatch(furnitureTypeAction.fetchAllFurnitureType());\r\n  await dispatch(furnitureColorAction.fetchAllFurnitureColor());\r\n  await dispatch(furnitureMaterialAction.fetchAllFurnitureMaterial());\r\n  await dispatch(furnitureAction.fetchAllFurniture());\r\n}\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  loadAllData(dispatch);\r\n\r\n  return (\r\n    <div>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route exact path='/login/' component={Login} />\r\n          <PrivateRoute exact path='/' component={MainLayout} />\r\n          <PrivateRoute exact path='/room-types/' component={MainLayout} />\r\n          <PrivateRoute exact path='/furniture-types/' component={MainLayout} />\r\n          <PrivateRoute exact path='/furniture-colors/' component={MainLayout} />\r\n          <PrivateRoute exact path='/furniture-materials/' component={MainLayout} />\r\n          <PrivateRoute exact path='/furnitures/' component={MainLayout} />\r\n          <PrivateRoute exact path='/addressables/' component={MainLayout} />\r\n          <PrivateRoute exact path='/versions/' component={MainLayout} />\r\n          <Route path='*' component={Error404} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { authenticationActionType as ActionType } from '../actions';\r\n\r\nconst initState = ({\r\n    loggingIn: false,\r\n});\r\nconst authentication = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case(ActionType.LOGGING_IN):\r\n            return Object.assign({}, state, { loggingIn: true, logInError: false });\r\n        case(ActionType.LOGGED_IN):\r\n            return Object.assign({}, state, { loggingIn: false });\r\n        case(ActionType.LOG_IN_ERROR):\r\n            return Object.assign({}, state, { loggingIn: false, logInError: true });\r\n        case(ActionType.FETCHED_USER_DATA):\r\n            return Object.assign({}, state, { auth: action.auth });\r\n        case(ActionType.LOGGED_OUT):\r\n            return Object.assign({}, state, { auth: false });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { authentication };","import {\r\n    //roomTypeAction as Action, \r\n    roomTypeActionType as ActionType\r\n} from '../actions/room-type.action';\r\n\r\nconst initState = {\r\n    isFetching: true,\r\n    items: []\r\n};\r\nconst roomType = (state = initState, action) => {\r\n    let newItems = [];\r\n    let index = 0;\r\n    switch(action.type) {\r\n        case ActionType.ROOM_TYPE_IS_FETCHING:\r\n            return Object.assign({}, state, {isFetching: true, hasError: false});\r\n        case ActionType.ROOM_TYPE_HAS_ERROR:\r\n            return Object.assign({}, state, {isFetching: false, hasError: true});\r\n        case ActionType.FETCHED_ALL_ROOM_TYPE:\r\n            return Object.assign({}, state, {items: action.items}, {isFetching: false});\r\n        case ActionType.ROOM_TYPE_DETAIL:\r\n            return Object.assign({}, state, {itemDetail: action.item}, {isFetching: false});\r\n        case ActionType.ROOM_TYPE_CREATED:\r\n            newItems = [...state.items];\r\n            newItems.push(action.data);\r\n            return Object.assign({}, state, {isFetching: false}, \r\n                { items:  newItems}\r\n            );\r\n        case ActionType.ROOM_TYPE_EDITED:\r\n            newItems = [...state.items];\r\n            index = newItems.findIndex(item => item.id === action.data.id);\r\n            newItems.splice(index, 1, action.data);\r\n            return Object.assign({}, state, {isFetching: false},\r\n                { items: newItems }\r\n            );\r\n        case ActionType.ROOM_TYPE_DELETED:\r\n            return Object.assign({}, state, {isFetching: false},\r\n                Object.assign({}, {items: state.items.filter(item => item.id !== action.data.id)})\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { roomType };","import { furnitureTypeActionType as ActionType }  from '../actions/furniture-type.action';\r\n\r\nconst initState = ({\r\n    isFetching: false,\r\n    hasError: false,\r\n    items: []\r\n});\r\n\r\nconst add = (list, newItem) => {\r\n    let newList = [...list];\r\n    newList.push(newItem);\r\n    return newList;\r\n};\r\n\r\nconst remove = (list, itemRemove) => {\r\n    let newList = [...list];\r\n    return newList.filter(item => item.id !== itemRemove.id);\r\n};\r\n\r\nconst replace = (list, itemReplace) => {\r\n    let newList = [...list];\r\n    let index = newList.findIndex(item => item.id === itemReplace.id);\r\n    newList.splice(index, 1, itemReplace);\r\n    return newList;\r\n};\r\n\r\nexport const furnitureType = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case(ActionType.FURNITURE_TYPE_IS_FETCHING):\r\n            return Object.assign({}, state, { isFetching: true, hasError: false });\r\n        case(ActionType.FURNITURE_TYPE_FETCHED_ALL):\r\n            return Object.assign({}, state, { isFetching: false, items: action.data });\r\n        case(ActionType.FURNITURE_TYPE_HAS_ERROR):\r\n            return Object.assign({}, state, { isFetching: false, hasError: true });\r\n        case(ActionType.FURNITURE_TYPE_CREATED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: add(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_TYPE_EDITED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: replace(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_TYPE_DELETED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: remove(state.items, action.data) }\r\n            );\r\n        default:\r\n            return Object.assign({}, state);\r\n    }\r\n}","import { furnitureColorActionType as ActionType }  from '../actions';\r\n\r\nconst initState = ({\r\n    isFetching: false,\r\n    hasError: false,\r\n    items: []\r\n});\r\n\r\nconst add = (list, newItem) => {\r\n    let newList = [...list];\r\n    newList.push(newItem);\r\n    return newList;\r\n};\r\n\r\nconst remove = (list, itemRemove) => {\r\n    let newList = [...list];\r\n    return newList.filter(item => item.id !== itemRemove.id);\r\n};\r\n\r\nconst replace = (list, itemReplace) => {\r\n    let newList = [...list];\r\n    let index = newList.findIndex(item => item.id === itemReplace.id);\r\n    newList.splice(index, 1, itemReplace);\r\n    return newList;\r\n};\r\n\r\nexport const furnitureColor = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case(ActionType.FURNITURE_COLOR_IS_FETCHING):\r\n            return Object.assign({}, state, { isFetching: true, hasError: false });\r\n        case(ActionType.FURNITURE_COLOR_FETCHED_ALL):\r\n            return Object.assign({}, state, { isFetching: false, items: action.data });\r\n        case(ActionType.FURNITURE_COLOR_HAS_ERROR):\r\n            return Object.assign({}, state, { isFetching: false, hasError: true });\r\n        case(ActionType.FURNITURE_COLOR_CREATED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: add(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_COLOR_EDITED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: replace(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_COLOR_DELETED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: remove(state.items, action.data) }\r\n            );\r\n        default:\r\n            return Object.assign({}, state);\r\n    }\r\n}","import { furnitureMaterialActionType as ActionType }  from '../actions';\r\n\r\nconst initState = ({\r\n    isFetching: false,\r\n    hasError: false,\r\n    items: []\r\n});\r\n\r\nconst add = (list, newItem) => {\r\n    let newList = [...list];\r\n    newList.push(newItem);\r\n    return newList;\r\n};\r\n\r\nconst remove = (list, itemRemove) => {\r\n    let newList = [...list];\r\n    return newList.filter(item => item.id !== itemRemove.id);\r\n};\r\n\r\nconst replace = (list, itemReplace) => {\r\n    let newList = [...list];\r\n    let index = newList.findIndex(item => item.id === itemReplace.id);\r\n    newList.splice(index, 1, itemReplace);\r\n    return newList;\r\n};\r\n\r\nexport const furnitureMaterial = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case(ActionType.FURNITURE_MATERIAL_IS_FETCHING):\r\n            return Object.assign({}, state, { isFetching: true, hasError: false });\r\n        case(ActionType.FURNITURE_MATERIAL_FETCHED_ALL):\r\n            return Object.assign({}, state, { isFetching: false, items: action.data });\r\n        case(ActionType.FURNITURE_MATERIAL_HAS_ERROR):\r\n            return Object.assign({}, state, { isFetching: false, hasError: true });\r\n        case(ActionType.FURNITURE_MATERIAL_CREATED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: add(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_MATERIAL_EDITED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: replace(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_MATERIAL_DELETED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: remove(state.items, action.data) }\r\n            );\r\n        default:\r\n            return Object.assign({}, state);\r\n    }\r\n}","import { furnitureActionType as ActionType }  from '../actions';\r\n\r\nconst initState = ({\r\n    isFetching: false,\r\n    hasError: false,\r\n    items: []\r\n});\r\n\r\nconst add = (list, newItem) => {\r\n    let newList = [...list];\r\n    newList.push(newItem);\r\n    return newList;\r\n};\r\n\r\nconst remove = (list, itemRemove) => {\r\n    let newList = [...list];\r\n    return newList.filter(item => item.id !== itemRemove.id);\r\n};\r\n\r\nconst replace = (list, itemReplace) => {\r\n    let newList = [...list];\r\n    let index = newList.findIndex(item => item.id === itemReplace.id);\r\n    newList.splice(index, 1, itemReplace);\r\n    return newList;\r\n};\r\n\r\nexport const furniture = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case(ActionType.FURNITURE_IS_FETCHING):\r\n            return Object.assign({}, state, { isFetching: true, hasError: false });\r\n        case(ActionType.FURNITURE_FETCHED_ALL):\r\n            return Object.assign({}, state, { isFetching: false, items: action.data });\r\n        case(ActionType.FURNITURE_HAS_ERROR):\r\n            return Object.assign({}, state, { isFetching: false, hasError: true });\r\n        case(ActionType.FURNITURE_CREATED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: add(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_EDITED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: replace(state.items, action.data) }\r\n            );\r\n        case(ActionType.FURNITURE_DELETED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: remove(state.items, action.data) }\r\n            );\r\n        default:\r\n            return Object.assign({}, state);\r\n    }\r\n}","import { versionActionType as ActionType }  from '../actions/version.action';\r\n\r\nconst initState = ({\r\n    isFetching: false,\r\n    hasError: false,\r\n    items: []\r\n});\r\n\r\nconst add = (list, newItem) => {\r\n    let newList = [...list];\r\n    newList.push(newItem);\r\n    return newList;\r\n};\r\n\r\nexport const version = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case(ActionType.VERSION_IS_FETCHING):\r\n            return Object.assign({}, state, { isFetching: true, hasError: false });\r\n        case(ActionType.VERSION_FETCHED_ALL):\r\n            return Object.assign({}, state, { isFetching: false, items: action.data });\r\n        case(ActionType.VERSION_HAS_ERROR):\r\n            return Object.assign({}, state, { isFetching: false, hasError: true });\r\n        case(ActionType.VERSION_CREATED):\r\n            return Object.assign({}, state, { isFetching: false },\r\n                { items: add(state.items, action.data) }\r\n            );\r\n        default:\r\n            return Object.assign({}, state);\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authentication } from './authentication.reducer';\r\nimport { roomType as roomTypes } from './room-type.reducer';\r\nimport { furnitureType as furnitureTypes } from './furniture-type.reducer';\r\nimport { furnitureColor as furnitureColors } from './furniture-color.reducer';\r\nimport { furnitureMaterial as furnitureMaterials } from './furniture-material.reducer';\r\nimport { furniture as furnitures } from './furniture.reducer';\r\nimport { version as versions } from './version.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    roomTypes,\r\n    furnitureTypes,\r\n    furnitureColors,\r\n    furnitureMaterials,\r\n    furnitures,\r\n    versions\r\n});\r\n\r\nexport default rootReducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'babel-polyfill';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { configureStore } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = configureStore()\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n//import { createLogger } from 'redux-logger'\r\nimport {default as rootReducer } from '../reducers'\r\n\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n//const loggerMiddleware = createLogger()\r\n\r\nconst enhancer = (middleware) =>\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\r\n      middleware\r\n    ) : middleware;\r\n\r\nconst configureStore = (preloadedState) => {\r\n  return createStore(\r\n    rootReducer,\r\n    /*preloadedState,*/  \r\n    enhancer(applyMiddleware(thunkMiddleware, ))\r\n  )\r\n};\r\n\r\nexport { configureStore };"],"sourceRoot":""}